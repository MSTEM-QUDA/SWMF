stages:
  - deploy

create_manual:
  stage: deploy
  #only:
  #  - schedules
  #image: aergus/latex
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - DEBIAN_FRONTEND=noninteractive apt-get install -y tzdata
    - apt-get install -y make
    - apt-get install -y texlive
    - apt-get install -y ghostscript
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY_SHARE" | tr -d '\r' | ssh-add -
    - echo "$SSH_PRIVATE_KEY_UTIL" | tr -d '\r' | ssh-add -
    #- echo "$SSH_PRIVATE_KEY_BATSRUS" | tr -d '\r' | ssh-add -
    #- echo "$SSH_PRIVATE_KEY_BATL" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan gitlab.umich.edu >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - git config --global user.email "csem@umich.edu"
    - git config --global user.name "GitLab Runner"

  script:
    - perl -e '$a=`find * -type f -size +20M`; die "Files exceeding 20M size limit $a\n" if $a; exit 0'
    - ssh git@gitlab.umich.edu
    - git clone git@gitlab.umich.edu:swmf_software/share.git
    - git clone git@gitlab.umich.edu:swmf_software/util.git
    - ./Config.pl -install=BATSRUS -compiler=gfortran 
    - make PDF
  artifacts:
    paths:
      - ./doc/SWMF.pdf
      - ./doc/SWPC.pdf
      - ./doc/TESTING.pdf
      - ./doc/REFERENCE.pdf
      - ./doc/MAINTENANCE.pdf
      - ./doc/PHYSICS.pdf
      - ./doc/SOFTWARE_STANDARD.pdf
