!-- The syntax is described by share/Scripts/CheckParam.pl and the manual -->

<commandList name="Ridley Ionosphere Model: IE Component">

<commandgroup name="Testing">

<command name="STRICT">
	<parameter name="UseStrict" type="logical" default="T" />

#STRICT
T                       UseStrict

If true then stop when parameters are incompatible. If false, try to
correct parameters and continue. Default is true, i.e. strict mode.
</command>

<command name="DEBUG">
	<parameter name="iDebugLevel" type="integer" min="-1" default="-1"/>
	<parameter name="iDebugProc"  type="integer" min="0" max="$_nProc"
								default="0"/>

#DEBUG
2			iDebugLevel
3			iDebugProc

The iDebugLevel variable sets the level of debug information
for the processor selected by iDebugProc.

Default is iDebugLevel=-1 which is no debug info on any and iDebugProc=0.
</command>

</commandgroup>

<commandgroup name="Output">
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! OUTPUT !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
<command name="IONODIR">
	<parameter name="NameIonoDir" type="string" length="100" 
						default="ionosphere"/>

#IONODIR
IE/Plots		NameIonoDir

The NameIonoDir variable contains the name of the directory to store
output files. Default value is "IE/ionosphere".

</command>

<command name="SAVEPLOT" alias="IE_SAVEPLOT">
	<parameter name="nPlotFile" type="integer" min="0" max="10"
                default="0" />
	<for from="1" to="$nPlotFile">
		<parameter name="StringPlot" type="strings" min="2" max="2">
			<part name="TypePlotForm" type="string" input="select"
								required="T">
	                        <option name="IDL" value="idl" default="T"/>
				<option name="TecPlot" value="tec" />
			</part>
			<part name="TypePlotVar" type="string" input="select"
                                                                required="T">
                        	<option name="Minimum" value="min" 
								default="T"/>
	                        <option name="Maximum" value="max" />
	                        <option name="UA"      value="uam" />
        	                <option name="Aurora"  value="aur" />
			</part>
		</parameter>
		<parameter name="DnOutput" type="integer" min="-1" />
	        <parameter name="DtOutput" type="real"    min="-1" />
	</for>

#SAVEPLOT
2			nFile
min idl			StringPlot
-1			DnOuput
10.0			DtOutput [sec]
max tec			StringPlot
-1			DnOuput
20.0			DtOutput [sec]

The StringPlot variable consists of two string parts:
the TypePlotVar string can be 'min', 'max', 'uam' or 'aur'
corresponding to a minimum, maximum, upper atmosphere or auroral set of
plot variables. The other part TypePlotForm can be 'idl'
or 'tec' corresponding to plot files for IDL or TecPlot.
The DnOuput and DtOutput variables determine the frequency
of saves in terms of time step or physical time.

The default is that no plotfiles are saved.

The 'min' variable set includes:
  Theta [deg], Psi [deg], SigmaH [mhos], SigmaP [mhos], Jr [mA/$m^2$], Phi [kV]
The 'max' variable set includes:
  X [Re], Y [Re], Z [Re], Theta [deg], Psi [deg], SigmaH [mhos], SigmaP [mhos],
  E-Flux [W/$m^2$], Ave-E [eV], Jr [mA/$m^2$], Phi [kV], Ex [mV/m], Ey [mV/m], Ez [mV/m],
  Jx [microA/$m^2$], Jy [microA/$m^2$], Jz [microA/$m^2$], Ux [km/s], Uy [km/s], Uz [km/s],
  JouleHeat [mW/$m^2$], IonNumFlux [/$cm^2$/s],
  RT 1/B [1/T], RT Rho [amu/$cm^3$], RT P [Pa],
  conjugate dLat [deg], conjugate dLon [deg]
The 'uam' variable set includes:
  Theta [deg], Psi [deg], SigmaH [mhos], SigmaP [mhos], Jr [mA/$m^2$], Jr(NW) [mA/$m^2$],
  E-Flux [W/$m^2$], Ave-E [eV], Phi [kV]
The 'aur' variable set includes:
  Theta [deg], Psi [deg], SigmaH [mhos], SigmaP [mhos], Jr [mA/$m^2$], Phi [kV],
  E-Flux [W/$m^2$], Ave-E [eV], RT 1/B [1/T], RT Rho [amu/$cm^3$], RT P [Pa],
  JouleHeat [mW/$m^2$], IonNumFlux [/$cm^2$/s],
  conjugate dLat [deg], conjugate dLon [deg]
</command>

<command name="SAVEPLOTNAME">
	<parameter name="IsPlotName_e" type="logical" default="F" />
#SAVEPLOTNAME
F			IsPlotName_e

Plot files are named with the new substring including full year, ie. _e20000321-104510-000
</command>

<command name="SAVELOGNAME">
	<parameter name="IsLogName_e" type="logical" default="F" />
#SAVELOGNAME
F			IsLogName_e

Log files are named with the new substring including full year, ie. _e20000321-104500-000
</command>

<command name="SAVELOGFILE">
	<parameter name="DoSaveIELogfile" type="logical" default="F"/>

#SAVELOGFILE
F			DoSaveIELogfile

If true, every time that iono_solve is called, iteration, time, and soltution
information is written to a logfile.
</command>

</commandgroup>

<commandgroup name="Physical parameters">
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!! Physical parameters !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

<command name="IONOSPHERE">
	<parameter name="iConductanceModel" type="integer"
							input="select">
		<option name="(0) constant Pedersen and 0 Hall"
							value="0" />
		<option name="(1) constant Pedersen and Hall"
							value="1" />
		<option name="(2) F107 flux and and constant Hall"
							value="2" />
		<option name="(3) Simple oval"		value="3" />
		<option name="(4) Restricted oval"	value="4" />
		<option name="(5) Realistic oval" 	value="5" 
							default="T"/>
	</parameter>
	<parameter name="UseFullCurrent" type="logical" default="F"/>
	<parameter name="UseFakeRegion2" type="logical" default="F"/>
	<parameter name="F107Flux" type="real" min="0" default="150"/>
	<parameter name="StarLightPedConductance" type="real" min="0.001" 
						default="0.25"/>
	<parameter name="PolarCapPedConductance" type="real" min="0" 
						default="0.25"/>

	<rule expr="not ($iConductanceModel=~/3|4|5/ and $F107Flux==0)">
		F107Flux must be positive for ConductanceModel = 3, 4 or 5
	</rule>
#IONOSPHERE
5			iConductanceModel
F			UseFullCurrent
F			UseFakeRegion2
150.0			F107Flux
0.25			StarLightPedConductance
0.25			PolarCapPedConductance

The iConductanceModel variable determines which ionosphere model is used:\\
  0 - uses a constant Pedersen conductance which is set by 
      StarLightPedConductance\\
  1 - uses a constant Pedersen conductance which is set by 
      StarLightPedConductance, and a constant Hall conductance
      which is set by PolarCapPedConductance\\
  2 - uses a solar EUV combined with a nightside conductance, so
      it uses F107Flux and StarLightPedConductance\\
  3 - uses solar EUV, nightside, and crude oval, so uses
      F107Flux, StarLightPedConductance, and PolarCapPedConductance,
      since a polar cap is defined with the oval.\\
  4 - restricted oval, uses same variables as 3.\\
  5 - more realistic oval, uses same variables as 3.\\

Model 4 and 5 differ in the way the conductances are limited to the
fitted oval. Model 4 is more restrictive, while model 5 is somewhat
more relaxed.

The UseFullCurrent and UseFakeRegion2 logicals were used in the past
to test various algorithmic choices. They should have a false value now.
The default values are shown by the example above.

</command>

<command name="GEOMAGINDICES">

#GEOMAGINDICES

This command activates the ionospheric contribution to GM's calculation of 
geomagnetic indices, activated by the GM command of the same name.  While it is 
possible to run the GM version without an IE contribution, it is not recommended.
This command currently has no parameters associated with it.
</command>

<command name="MAGNETOMETER">
	<parameter name="NameMagInputFile" type="string" length="100"/>
	<parameter name="TypeFileOut" type="string" input="select"> 
		<option name="single" default="T"/>
		<option name="step"/>
	</parameter>
	<parameter name="DnOutput" type="integer" min="-1" default="-1"/>
	<parameter name="DtOutput" type="real"    min="-1" default="-1"/>
	<rule expr="-f $NameMagInputFile">
		Magnetogram position file $NameMagInputFile must exist
	</rule>
#MAGNETOMETER
magin.dat		NameMagInputFile
single                  TypeFileOut
-1			DnOutput
60.0			DtOutput

The #MAGNETOMETER command is used for the calculation of the ground perturbations
caused by two current systems: Hall and Pedersen currents. 
In addition, the effects of the the field aligned currents in the 'gap' region 
and the magnetopsheric currents in the GM domain can be calculated with
the equivalent command in the GM section. If the IE is coupled to GM, 
it sends the IE contributions to GM, so GM can save them together.

The NameMagInputFile parameter gives the file name that contains the
locations on the Earth where the user is interested in calculating 
the ground magnetic perturbations. The file has the following format:
\begin{verbatim}
#COORD
MAG			The coordinate system for the latitude/longitude below

#START
YKC   68.93   299.36    The name of the station, latitude, longitude
MEA   61.57   306.20
NEW   54.85   304.68
...
\end{verbatim}
The coordinate system can be set to GEO (geographic), MAG (geomagnetic) or SMG 
(solar magnetic) coordinates. The station names can have maximum 3 characters.
The name, latitude, and longitude columns should be separated with spaces.

The TypeFileOut parameter specifies the format of the output file. 
The value 'single' creates a single output file for all magnetometers and all output times, 
while  'step' creates a new file for all magnetometers for each output time.  
The naming convention for the files is controlled by the #SAVELOGNAME command.

The DnOutput and DtOutput parameters determine the frequency of writing out the
calculated perturbations in number of potential solves 
and time intervals, respectively.

The output of the ground-based magnetic perturbations is in the file
\begin{verbatim}
IE/ionosphere/IE_mag_TIMESTAMP.mag 
\end{verbatim}
in which the location of each station in SM coordinates, the 3 components
(northward, eastward, and downward in SM coordiantes) of the magnetic perturbations 
due to Hall and Pedersen currents are saved. 
The unit of the perturbation output is nT.

Default is no magnetic perturbation calculation.
</command>

<command name="IM">
	<parameter name="TypeImCouple" type="string" input="select">
		<option name="north"    default="T"/>
		<option name="south"               />
		<option name="cpcpmin"             />
		<option name="average"             />
	</parameter>
	<parameter name="FractionImJr" type="real" min="0" max="1" default="1"/>

#IM
average			TypeImCouple
0.5			FractionImJr

The TypeImCouple parameter determines which hemisphere the IM component 
is coupled to. If the value is 'north' or 'south', the potential and radial
current are sent from the corresponding magnetic hemisphere. For 'cpcpmin'
the hemisphere with the lower cross polar cap potential is selected.
For TypeImCouple='average' the potential and radial current are averaged
for the north and south hemispheres.

The FractionImJr parameter multiplies the field aligned currents received from IM
(when the IM to IE coupling is swithed on) 
so they do not shield completely the weaker GM field aligned currents.

The default values are 'north' and 1.0 (full strength IM currents), 
which is backward compatible, and it requires no communication 
between the IE processors.
</command>

<command name="UA">
	<parameter name="DoCoupleUaCurrent" type="logical" default="F"/>
	<parameter name="LatBoundary" type="real" min="0" max="60"
				default="45" if="$DoCoupleUaCurrent" />

#UA
T		DoCoupleUaCurrent
45.0		LatBoundary [deg] (only read if DoCoupleUaCurrent is true)

The DoCoupleUaCurrent parameter determines if the field aligned current
calculated by the UA component should be used. Usually the currents are
dominated by the field aligned currents provided by the GM component.
The coupling with the UA currents is still experimental.
If DoCoupleUaCurrent is set to true, the lower latitude boundary for
the potential solver should be given with the LatBoundary paramter.

The default value is DoCoupleUaCurrent=.false, i.e. the UA currents 
are not included.
</command>

<command name="AMIEFILES">
	<parameter name="AMIEFileNorth" type="string" length="100" />
	<parameter name="AMIEFileSouth" type="string" length="100" />

#AMIEFILES
IE/amie.north
IE/amie.south

Set the files to read the AMIE data from.

Default is not reading AMIE files.
</command>

<command name="SPS">
	<parameter name="UseSPS" type="logical" default="F"/>

#SPS
T			UseSPS

The UseSPS parameter indicates if the serial potential solver is used.
This is the default in the SWMF and it cannot be modified in the SWMF.
</command>

<command name="BACKGROUND" if="$_IsStandAlone">
	<parameter name="NameOfModelDir" type="string" length="100" />
	<parameter name="NameOfEFieldModel" type="string" length="100" />
	<parameter name="NameOfAuroralModel" type="string" length="100" />
	<parameter name="NameOfSolarModel" type="string" length="100" />

#BACKGROUND
dir			NameOfModelDir
weimer96		NameOfEFieldModel
ihp			NameOfAuroralModel
xyz			NameOfSolarModel

This command cannot be used in the SWMF.
</command>

<command name="CONDUCTANCE">
	<parameter name="OvalWidthFactor" type="real" min="0" default="1.0"/>
	<parameter name="OvalStrengthFactor" type="real" min="0" default="1.7"/>

#CONDUCTANCE
1.0			OvalWidthFactor
1.7			OvalStrengthFactor

Modifies the conductance by adjusting the oval width/strength.
Only works for conductance model 4!
</command>

<command name="BOUNDARY">
	<parameter name="LatBoundary" type="real" min="0" max="90" default="50"/>

#BOUNDARY
10.0			LatBoundary

Define the low latitude boundary for the potential solver. The default is set 
dynamically by the boundary of the closed field line region.
</command>

</commandgroup>

<commandgroup name="Scheme parameters">

<command name="SOLVER">
	<parameter name="NameSolver" type="string" input="select" case="lower">
		<option name="gmres"     		/>
		<option name="bicgstab"	default="T"	/>
	</parameter>
#SOLVER
bicgstab		NameSolver (gmres or bicgstab)

Select which solver to use. Default is bicgstab since it is faster.
</command>

<command name="KRYLOV">
	<parameter name="UsePreconditioner" type="logical" default="T"/>
	<parameter name="UseInitialGuess"   type="logical" default="T"/>
	<parameter name="Tolerance" type="real" min="0" default="0.01"/>
	<parameter name="MaxIteration" type="integer" min="1" default="100"/>

#KRYLOV
T			UsePreconditioner
T			UseInitialGuess
0.01			Tolerance
100			MaxIteration

This command controls the parameters for the Krylov solver used to
solve the Poisson type equation for the electric potential.
If UsePreconditioner is true the solver uses a preconditioner.
If UseInitialGuess is true, the previous solution is used as an 
initial guess. The Tolerance parameter sets the second norm of
the final (preconditioned) residual. The MaxIteration parameter sets the
maximum number of iterations before the linear solver gives up.
In most cases the default values should work fine.

The default values are shown above.
</command>

</commandgroup>

<rule expr="-d 'IE/ionosphere' or not $_IsFirstSession">
	Output directory IE/ionosphere should exist!
</rule>

</commandList>
