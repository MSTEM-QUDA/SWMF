To install and run iPic3D, you need to do the following:

  # make sure that you have installed MPI 
  # if you want to choose output other than 'pvtk', make sure that you have also installed HDF5
  
  # a quick start
  mkdir build
  cd build
  mkdir data
  cmake ..
  make
  mpiexec -n XXX ./iPic3D  inputfileXYZ.inp 

  # some sample input files are available in folder inputfiles

  # some of text the below may be out of date  
  # get help
  ipic help
  # define some environment variables by hand, e.g.:
  # on a system with modules the appropriate directory
  # would be revealed with e.g. "module show hdf5-par":
  export HDF5_ROOT="/usr/local/hdf5-par"
  # give access to the ipic script
  export PATH=$IPIC_HOME/scripts:$PATH
  # this is used by the scripts in $IPIC_HOME/scripts
  export IPIC_MPIRUN="mpiexec"

  # Unfortunately H5hut 1.99.12 does not work for HDF5 version
  # 1.8.13 or higher, because the HDF5 committee removed an
  # MPI-POSIX driver that they thought no one was using; so do e.g.:
  module load hdf5/1.8.12
  # define HDF5_ROOT (see above)
  # install in home directory
  export H5HUT_DIR=$HOME/install
  mkdir $H5HUT_DIR
  # extract archive
  tar xvf H5hut-1.99.12.tar.bz2
  cd H5hut-1.99.12
  # configure
  ./configure --enable-parallel --enable-large-indices --prefix=$H5HUT_DIR --with-hdf5=$HDF5_ROOT
  make
  make install

To compensate for a deficiency in H5hut, we
have to use the -DPARALLEL_IO flag when we compile:

  export IPIC_CMAKE_ARGS="-DCMAKE_CXX_FLAGS=-DPARALLEL_IO -DIPIC_H5HUT_OUTPUT=ON"

Then we can build:

  mkdir build.para
  cd build.para
  ipic cmake

And then we can run:

  # change WriteMethod from default to Parallel
  vim src/inputfiles/GEM.inp
  # run the simulation; rm data/* is needed at start of each new run
  rm data/*; ipic run