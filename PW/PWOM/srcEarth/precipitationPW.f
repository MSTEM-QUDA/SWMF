CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE PRECIP(IDMX,ALTMIN,PHOTOTP)
      use ModPWOM, ONLY: UseAurora,UseIE
      use ModCommonVariables, ONLY: GMLAT,GMLONG,AveIE,EfluxIE
C THIS SUBROUTINE CALCULATES IONIZATION FREQUENCIES FOR ATOMIC OXYGEN
C BASED ON USER-SPECIFIED ELECTRON PRECIPITATION
       REAL MO,MD,NO,NN2,NO2,NH,NHE,TN,GEE
       REAL  ZZZZ(601),G(601),PHOTOTP(601),IONRATE(601)

CALEX Here was a big problem!! IONRATE was implicitly defined to be integer
CALEX type. If you look below at how it is used, it appears clear to me
CALEX that it should be of type real. After all, it is an ionization rate!!
C     DIMENSION ZZZZ(601),G(601),PHOTOTP(601),IONRATE(601)

       DIMENSION FLUX1(4),ALF1(4)
CALEX again common_variables.f includes common variables
!       COMMON /MSIS1/IDATE,UT,SEC,GLAT,GLONG,STL,F107A,F107,AP(7),IART
!     $,GMLAT,GMLONG
C                    rain   cusp  aurora  mix
       DATA FLUX1 /  0.03,  0.3,  1.5,    .3  /
       DATA ALF1 /   0.2,   0.1,  0.75,   .2 /
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C      PICK A ENERGY AND FLUX VALUE!!!!!!!!!!!!!!!!!!!!!!!!
C      DEFINE AN AVERAGE PARTICLE ENERGY (KEV)
C      DEFINE A CHARACTERISTIC PRECIPITATING ELECTRON FLUX (ERGS/CM2/SEC)
!          if (UseAurora) then
!             ALF  = get_eAverageE(GMLAT,GMLON)
!             FLUX = (get_eflux(GMLAT,GMLON)*1.602E9)/(2.*ALF)
!          else
       if ( ((UseIE .or. UseAurora) .and. GmLat > 65.0) 
     &      .or. ((UseIE.or. UseAurora) .and. GmLat < -65.0)) then
          ALF  = max(AveIE,ALF1(1))
          FLUX = max((EfluxIE*1.602E9)/(2.0*ALF),(FLUX1(1)*1.602E9)/(2.*ALF))
       else
          ALF  = ALF1(1)  
          FLUX = (FLUX1(1)*1.602E9)/(2.*ALF)
          if (GmLat < 75.0) then
             PHOTOTP(:)=0.0
             return
          endif
       endif




!          endif
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C USE KM FOR ALT ARRAY GENERATION!!! ALTMIN COMES IN AS CM!!!!!
       ALTMIN1 = ALTMIN/1E05
C
      IZMIN = INT(ALTMIN1)
      INTER = IDMX*2
      IZMAX = INTER*300
      INTERR = (IZMAX-IZMIN)/INTER
      I=0  
C       ALT ARRAY LOOP VARIABLES IN KM 
          DO 101 K = IZMIN,IZMAX,INTER
            I = I+1
            ZKK = K*1.E05
            ZZZZ(I) = ZKK
            G(I) = 983.06/((1+ZZZZ(I)/6356.77E05)**2)
 101      CONTINUE
          DO 102 I= 1,INTERR
C             PRINT*,ZZZZ(I) 
C MSIS GETS ALT IN CM    
             CALL MODATM(ZZZZ(I),NO2,NN2,NO,NH,NHE,TN)
C    XNDD IS TOTAL NUMBER DENSITY PARTICLES CM-3; 
         XNDD = NO2 + NN2 + NO + NH +NHE
C    MD IS TOTAL MOLECULAR WT
         MD= (NO2 *32.+ NN2 *28.+ NO *16. + NH *2.+NHE*4. )
C    NOW DETERMINE AVG MOLECULAR WEIGHT
         AMW= MD/XNDD
C    COMPUTE MASS DENSITY(GM/CM-3)    
         RHO = MD*1.6726E-24
         H = (8.317E07*TN)/(AMW*G(I))
         D = RHO*H
C          PRINT*,D,ALF,H,RHO
             X = ((D/4.E-06)**0.606)/ALF
C     FY IS A DIMENSIONLESS ENERGY DISSIPATION FUNCTION AFTER LAZAREV
C     (GEOMAGN. AERONOMIYA,1967,7,219-223) WHICH WAS MODIFIED FOR AN 
C     ISOTROPIC DISTRIBUTION OF ENERGETIC PARTICLES BY ROBLE (PRIVATE
C     COMMUNICATION,1988). SEE ROBLE ET AL (GRL NOV 88) FOR DETAILS.
C
      FY = 3.233*(X**2.56588)*EXP(-2.2541*(X**0.7297198))+
     $ 1.106907*(X**1.71349)*EXP(-1.8835444*(X**0.86472135))
C
C      PRINT*,'      RHO            H            D             X        
C     $           FY     '
C      PRINT*,RHO,H,D,X,FY
C CALCULATE TOTAL IONIZATION RATE (CM-3 SEC-1) BY PRECIPITATING ELECTRONS
      TOTION = FLUX*ALF*FY/(35.E-03*H)
C COMPUTE PORTION OF OXYGEN IONIZATION
      GEE = 0.92*NN2+1.5*NO2+0.56*NO
C  IONRATE (ATOMS CM-3 SEC-1) IS IONIZATION RATE FOR JUST O+ PRODUCTION 
      IONRATE(I) = (0.5*NO2+0.56*NO)*TOTION/GEE
C  NOW COMPUTE O+ IONIZATION FREQUENCY
      PHOTOTP(I)= IONRATE(I)/(0.56*NO + 0.5*NO2) 
C
  102  CONTINUE
C      WRITE(16,9992)(PHOTOTP(J),J,(ZZZZ(J)/1.E05),J = 1,23)
C 9992 FORMAT(1PE15.4,I4,1PE15.4,'PRCP FRQ,J,ALT PRECIP OUT')
      RETURN
      END
