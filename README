#############################
# Obtain SWMF and the tests #
#############################

# Get the source code
cvs checkout SWMF_NEW

# Change directory
cd SWMF_NEW

# Get the test tar ball into this directory and open it
# It will create a test/ subdirectory with several files
tar xf SWMF_TEST.tar

################
# install SWMF #
################
# !!! On the SGI Altix do the following !!!
SetSWMF.pl -install -c=ifort -m=Altix
module switch intel-comp.7.1.027 intel-comp.8.0.066

# !!! On a Linux system with the PGF90 compiler !!!
SetSWMF.pl -install -c=pgf90

# !!! On Darwin using the xlf compiler !!!
SetSWMF.pl -install -c=xlf

# !!! On Linux or Darwin with NAG F95, on the SGI and on the Compaq !!!
SetSWMF.pl -install

##################
# configure SWMF #
##################
# select the SC/BATSRUS component version (this will take a few minutes!)
SetSWMF.pl -v=SC/BATSRUS

# Set the recommended grid size for the tests
SetSWMF.pl -g=UA:9,9,25,2,2 -g=GM:8,8,8,200,40 -g=SC:4,4,4,1000

################
# compile SWMF #
################
# compile bin/SWMF.exe (this may take an hour!)
make

# compile bin/PostIDL.exe (post processing code)
make PIDL

########################
# create run directory #
########################
make rundir
cd run

############################################
# TEST 1: restart at 4 hours physical time #
############################################

# !!! on Linux and OSF1 machines use !!!
tar xzf ../test/scih_4hr_restart.tgz
tar xzf ../test/gmimieua_restart.tgz

# !!! on the IRIX64 and Darwin machines use !!!
gunzip ../test/scih_4hr_restart_sgi.tgz
gunzip ../test/gmimieua_restart_sgi.tgz
tar xf ../test/scih_4hr_restart_sgi.tar
tar xf ../test/gmimieua_restart_sgi.tar

# copy in PARAM and LAYOUT files
cp ../test/PARAM.in.8comp PARAM.in
cp ../test/LAYOUT.in.8comp LAYOUT.in

# edit LAYOUT.in so that it fits on your machine

# Check if everything is OK from the main directory
# Define the number of CPU-s you plan to use after the -n= flag.
cd ..
Scripts/TestParam.pl -n=128

# If there are error messages, fix them. 
# For example if there are not enough CPU-s for a component change the LAYOUT
# Repeat this until Scripts/TestParam.pl runs silently.

# run the code by submitting a job, or interactively
cd run
mpirun -np 128 SWMF.exe > runlog.np128

# Postprocess the plot files
cd GM
pIDL
pTEC
cd ../IH
pIDL
pTEC
cd ../SC
pIDL
pTEC
cd ../IE
pION -r
cd ..

##########################################
# TEST 2: restart from the steady state  #
##########################################

# !!! on Linux and OSF1 machines use !!!
tar xzf ../test/scih_restart.tgz
tar xzf ../test/gmimieua_restart.tgz

# !!! on the IRIX64 and Darwin machines use !!!
gunzip ../test/scih_restart_sgi.tgz
gunzip ../test/gmimieua_restart_sgi.tgz
tar xf ../test/scih_restart_sgi.tar
tar xf ../test/gmimieua_restart_sgi.tar

# copy in PARAM and LAYOUT files
cp ../test/PARAM.in.8comp.t=0 PARAM.in
cp ../test/LAYOUT.in.8comp LAYOUT.in

# edit LAYOUT.in so that it fits on your machine

# Check if everything is OK from the main directory
# Define the number of CPU-s you plan to use after the -n= flag.
cd ..
Scripts/TestParam.pl -n=128

# If there are error messages, fix them. 
# For example if there are not enough CPU-s for a component change the LAYOUT
# Repeat this until Scripts/TestParam.pl runs silently.

# run the code by submitting a job, or interactively
cd run
mpirun -np 128 SWMF.exe > runlog.np128

# Postprocess the plot files
cd GM
pIDL
pTEC
cd ../IH
pIDL
pTEC
cd ../SC
pIDL
pTEC
cd ../IE
pION -r
cd ..

###################################
# TEST 3: create SC steady state  #
###################################

# You can use the SWMF with the default settings, 
# but you only need the SC component,
# all other component versions can be Empty.

# copy in PARAM and LAYOUT files
cp ../test/PARAM.in.SC PARAM.in
cp ../test/LAYOUT.in.SC LAYOUT.in

# Check if everything is OK from the main directory
# Define the number of CPU-s you plan to use after the -n= flag.
cd ..
Scripts/TestParam.pl -n=128

# If there are error messages, fix them. 
# For example if there are not enough CPU-s for a component change the LAYOUT
# Repeat this until Scripts/TestParam.pl runs silently.

# run the code by submitting a job, or interactively
cd run
mpirun -np 128 SWMF.exe > runlog.np128

# Postprocess the plot files
cd SC
pIDL
pTEC
cd ..

######################################
# TEST 4: create SC-IH steady state  #
######################################

# !!! This test requires the SC restart files created in TEST 3 !!!

# You can use the SWMF with the default settings, 
# but you only need the SC and IH components,
# all other component versions can be Empty.

# copy in PARAM and LAYOUT files
cp ../test/PARAM.in.SCIH PARAM.in
cp ../test/LAYOUT.in.SCIH LAYOUT.in

# Check if everything is OK from the main directory
# Define the number of CPU-s you plan to use after the -n= flag.
cd ..
Scripts/TestParam.pl -n=128

# If there are error messages, fix them. 
# For example if there are not enough CPU-s for a component change the LAYOUT
# Repeat this until Scripts/TestParam.pl runs silently.

# run the code by submitting a job, or interactively
cd run
mpirun -np 128 SWMF.exe > runlog.np128

# Postprocess the plot files
cd SC
pIDL
pTEC
cd ../IH
pIDL
pTEC
cd ..

########################################
# TEST 5: create GM initial conditions #
########################################

# The parameters of the #SOLARWIND command were obtained
# from the result of the SC-IH steady state. 
# Otherwise this test can be run independently, 
# no restart files are read.

# You can use the SWMF with the default settings, 
# but you only need the GM component,
# all other component versions can be Empty.

# copy in PARAM and LAYOUT files
cp ../test/PARAM.in.GM PARAM.in
cp ../test/LAYOUT.in.GM LAYOUT.in

# Check if everything is OK from the main directory
# Define the number of CPU-s you plan to use after the -n= flag.
cd ..
Scripts/TestParam.pl -n=64

# If there are error messages, fix them. 
# For example if there are not enough CPU-s for a component change the LAYOUT
# Repeat this until Scripts/TestParam.pl runs silently.

# run the code by submitting a job, or interactively
cd run
mpirun -np 64 SWMF.exe > runlog.np64

# Postprocess the plot files
cd GM
pIDL
pTEC
cd ..

#################################################
# TEST 6: create GM-IM-IE-UA initial conditions #
#################################################

# !!! This test requires the GM restart files created in TEST 5 !!!

# You can use the SWMF with the default settings, 
# but you only need the GM, IM, IE and UA components,
# all other component versions can be Empty.

# copy in PARAM and LAYOUT files
cp ../test/PARAM.in.GMIMIEUA PARAM.in
cp ../test/LAYOUT.in.GMIMIEUA LAYOUT.in

# Check if everything is OK from the main directory
# Define the number of CPU-s you plan to use after the -n= flag.
cd ..
Scripts/TestParam.pl -n=128

# If there are error messages, fix them. 
# For example if there are not enough CPU-s for a component change the LAYOUT
# Repeat this until Scripts/TestParam.pl runs silently.

# run the code by submitting a job, or interactively
cd run
mpirun -np 128 SWMF.exe > runlog.np128

# Postprocess the plot files
cd GM
pIDL
pTEC
cd ../IE
pION -r
cd ..

# To make this run useful for the 8 component test 
# rename the restart directories
cd GM
mv restartIN restartIN_orig
mv restartOUT restartIN
mkdir restartOUT
cd ../IM
rmdir restartIN
mv restartOUT restartIN
mkdir restartOUT
cd ../UA
mv RestartOUT RestartIN
mkdir RestartOUT
cd ..

# To be able to start from a 4 hour simulation time
# the GM/restartIN/restart.H file was copied and modified.
# This is not absolutely necessary, because SWMF will overwrite
# the time read by GM.
cp GM/restartIN/restart.H GM/restartIN/restart.H.4hr

# modify simulation time
emacs M/restartIN/restart.H.4hr
-------------------------------------------
...
#TIMESIMULATION
 1.44000000E+04              tSimulation
...
--------------------------------------------

##########################################################
# TEST 7: Run SC-IH-SP for 4 hours in time accurate mode #
##########################################################

# This test requires the restart files for SC and IH
# which were generated in TEST 4. Alternatively open
# the tar file:

# !!! on Linux and OSF1 machines use !!!
tar xzf ../test/scih_restart.tgz

# !!! on the IRIX64 and Darwin machines use !!!
gunzip ../test/scih_restart_sgi.tgz
tar xf ../test/scih_restart_sgi.tar

# You can use the SWMF with the default settings, 
# but you only need the SC, IH and SP components,
# all other component versions can be Empty.

# copy in PARAM and LAYOUT files
cp ../test/PARAM.in.SCIHSP PARAM.in
cp ../test/LAYOUT.in.SCIHSP LAYOUT.in

# Check if everything is OK from the main directory
# Define the number of CPU-s you plan to use after the -n= flag.
cd ..
Scripts/TestParam.pl -n=128

# If there are error messages, fix them. 
# For example if there are not enough CPU-s for a component change the LAYOUT
# Repeat this until Scripts/TestParam.pl runs silently.

# run the code by submitting a job, or interactively
cd run
mpirun -np 128 SWMF.exe > runlog.np128

# Postprocess the plot files
cd SC
pIDL
pTEC
cd ../IH
pIDL
pTEC
cd ..

# To make the results of this test useful for TEST 1
# the restart files have to be renamed
cd SC
mv restartIN restartIN_orig
mv restartOUT restartIN
mkdir restartIN
cd ../IH
mv restartIN restartIN_orig
mv restartOUT restartIN
mkdir restartIN
cd ..
