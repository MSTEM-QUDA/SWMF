This document outlines how to install the stand-alone BATSRUS code
on your system and how to create and access the documentation.  
Note that BATSRUS is part of the SWMF. If you already have the SWMF,
you can use BATSRUS inside the SWMF to build the stand-alone BATSRUS code.

To learn more about the BATSRUS, including how to compile and run the code, 
please consult the user manual.  To install the BATSRUS and create the 
user manual please follow the instructions below. 

##################
# Obtain BATSRUS #
##################

# Get the source code from CVS (UM only) or from the tar balls.

# The minimim requirement is the BATSRUS repository. 

# You may also need the BATSRUS_data repository that contains large data files. 
# At the UofM the BATSRUS_data may already be available through a shared disk as

/csem1/SWMF_data/GM/BATSRUS/data

# If it is not availble through the shared disk, the repository 
# can be put into the home directory or into the BATSRUS directory.
# If you have installed the SWMF_data already, it contains the BATSRUS data too.

# Some data files used by the Center for Radiative Shock Hydrodynamics (CRASH)
# are in the CRASH_data repository. On many machines at the UofM this is 
# alread available through a shared disk as

/csem1/CRASH_data

# Otherwise it has to be placed into the home directory.

# !!! Getting BATSRUS from CVS (requires CVS access) !!!
# Set the CVS environment variables (with your user name)

setenv CVSROOT Your_User_Name_On_Herot@herot.engin.umich.edu:/FRAMEWORK
setenv CVS_RSH ssh

# Check out the BATSRUS distribution
cd {where_you_want_to_have_the_swmf}
cvs checkout BATSRUS

# Check out the BATSRUS_data distribution into the home directory if needed
cd
cvs checkout BATSRUS_data

# Check out the CRASH_data distribution into the home directory if needed
cd
cvs checkout CRASH_data

# !!! Opening tar balls !!!

# Open SWMF tar ball
cd {where_you_want_to_have_the_swmf}
tar -xzf {path_to_file}/SWMF_v{version_number}.tgz

# If needed, open the SWMF_data tar ball (this contains the BATSRUS data as well)
# into the home directory
cd
tar -xzf {path_to_file}/SWMF_data.tgz

# If needed, open the CRASH_data tar ball into the home directory
cd
tar -xzf {path_to_file}/CRASH_data.tgz

###################
# Install BATSRUS #
###################

# Many machines used by UofM are already recognized by the 
# share/Scripts/Config.pl script which is called by all other 
# Config.pl scripts in the SWMF.
# For these platform/compiler combinations installation is very simple:

Config.pl -install

# On other platforms the Fortan compiler should be explicitly given. 
# To see available choices, type 

Config.pl -compiler

# Then install the code with the selected Fortran compiler, e.g.

Config.pl -install -compiler=ifort

# A non-default C compiler can be added after a comma, e.g.

Config.pl -install -compiler=mpxlf90,mpxlc

# For machines with no MPI library, use

Config.pl -instal -serial -compiler=....

# This will only allow serial execution, of course.

######################
# Create the manuals #
######################

# Please note that creating both the PDF and HTML versions require 
# that LaTex and ps2pdf be installed on your system.  
# In addition, creating the HTML version requires the latex2html utility 

# To create the PDF versions of the manuals type
make PDF

# in the BATSRUS directory. The manuals will be in the Doc/ directory.

# To create the HTML version of the manuals type
make HTML

# in the BATSRUS directory. The HTML manuals will be in the Doc/HTML directory.

####################
# Read the manuals #
####################

# All manuals can be accessed by opening the top index file 

open Doc/index.html

# You may also read the PDF files directly with a PDF reader. 
# The most important document is the user manual in

Doc/USERMANUAL.pdf

#################
# Running tests #
#################

# You can try running the standard test suite by typing

make test

# in the main directory. This requires a machine where mpirun is available.
# The tests run on 2 CPU cores by default. To run on (up to 4) cores use

make test MPIRUN='mpirun -np 4'

# the results of the tests are summarized in test_swmf.res
# Successful passing of the test is indicated by empty *.diff files.
